name: CI/CD
run-name: CICD triggered by @${{ github.actor }}

on: 
  push:
    paths: 
      - "frontend/**"
      - "backend/**"
   
jobs:
    detect_changes:
      runs-on: ubuntu-latest
      outputs:
        backend: ${{ steps.changes.outputs.backend }}
        frontend: ${{ steps.changes.outputs.frontend }}
        
      steps:
        - uses: actions/checkout@v3
        - uses: dorny/paths-filter@v2
          id: changes
          with:
            base: ${{ github.ref }} 
            filters: |
              frontend:
                - 'frontend/**'
              backend:
                - 'backend/**'
              
    lint_frontend:
        name: lint frontend
        needs: detect_changes
        if: ${{ needs.detect_changes.outputs.frontend == true }}
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./frontend
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Echo job and branchname
              run: echo "Running ${{ github.job }} on ${{ github.ref }}"

            - name: set up python
              uses: actions/setup-python@v2
              with:
                python-version: '3.10'

            - name: install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: lint with black
              uses: psf/black@stable
            
            - name: lint with ruff
              uses: chartboost/ruff-action@v1
    
    lint_backend:
        name: lint backend
        needs: detect_changes
        if: ${{ needs.detect_changes.outputs.backend == true }}
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./backend
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Echo job and branchname
              run: echo "Running ${{ github.job }} on ${{ github.ref }}"

            - name: set up python
              uses: actions/setup-python@v2
              with:
                python-version: '3.10'

            - name: install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: lint with black
              uses: psf/black@stable
            
            - name: lint with ruff
              uses: chartboost/ruff-action@v1

    deploy_frontend:
        name: deploy frontend
        needs: detect_changes
        if: ${{ github.ref == 'refs/heads/45-deploy-to-fly' && needs.detect_changes.outputs.frontend == true }}
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./frontend
        steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Echo job and branchname
            run: echo "Running ${{ github.job}} on ${{ github.ref }}"

          - name: Set up flyctl
            uses: superfly/flyctl-actions/setup-flyctl@master

          - name: Deploy on fly
            run: flyctl deploy --remote-only
            env:
                FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

